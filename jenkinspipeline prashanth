node{
   
def mavenHome = tool name: "maven3.8.6"
echo "Jenkins url is: ${env.JENKINS_URL}"
echo "Node Name is: ${env.NODE_NAME}"
echo "Job name is: ${env.JOB_NAME}"


properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '4', 
daysToKeepStr: '', numToKeepStr: '4')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])]) 

try{ 
SlackNotifications('STARTED')
stage('CheckOutCode'){
git branch: 'development', credentialsId: 'fac5b04e-eaec-4dcf-9246-d54105b96829', url: 'https://github.com/Devops-prashanth/maven-web-application.git'
}
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

stage('ExecuteSonarReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}  
stage('UploadArtifactoryIntoArtifactoryRepo'){
sh "${mavenHome}/bin/mvn clean deploy"
} 
stage('DeployappIntoTomcatServer'){
sshagent(['c4dc6c3f-c17d-46e9-90ed-010c0837570d']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.40.145:/opt/apache-tomcat-9.0.65/webapps/"    
}
}

}//try block closing 

catch (e){
SlackNotifications(currentBuild.result)
throw e
}

finally{
SlackNotifications(currentBuild.result)
}

}//node closing

//Code snippet for sending slack notifications.

def SlackNotifications(String buildStatus = 'STARTED') {
 // build status of null means successful
 // buildStatus =  buildStatus ?: 'SUCCESS'
 buildStatus =  buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,"#walmart")
}
                                                                                                              
  
